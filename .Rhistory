my_lm = lm(yield~a*b*c*d,data = dat)
summary(my_lm)
rep(c(-1,1),c(2,2),4)
rep(c(-1,1),c(2,2),16)
my_aov$model
yield = c(8,31,79,77,
53,12,73,49,
4,9,68,38,
43,36,8,23)
a = c(rep(-1,8),rep(1,8))
b = c(rep(-1,4),rep(1,4),rep(-1,4),rep(1,4))
c = c(rep(c(-1,1,-1,1),4))
d = c(rep(c(-1,1,-1,1),4))
dat = data.frame(yield=yield/2,a=a,b=b,c=c,d=d)
my_lm = lm(yield~a*b*c*d,data = dat)
summary(my_lm)
my_lm$model
a
yield = c(8,31,79,77,
53,12,73,49,
4,9,68,38,
43,36,8,23)
a = c(rep("a0",8),rep("a1",8))
b = c(rep("b0",4),rep("b1",4),rep("b0",4),rep("b1",4))
c = c(rep(c("c0","c1","c0","c1"),4))
d = c(rep(c("d0","d0","d1","d1"),4))
dat2 = data.frame(yield=yield/2,a=a,b=b,c=c,d=d)
my_lm = lm(yield~a*b*c*d,data = dat2)
summary(my_lm)
summary(my_lm)
a=summary(my_lm)
View(a)
a=summary(my_aov)
View(a)
a[1]
a[1]$F =1
my_aov = summary(aov(yield~a*b*c*d,data = dat))
my_aov[[1]]
yield = c(8,31,79,77,
53,12,73,49,
4,9,68,38,
43,36,8,23)
a = c(rep("a0",8),rep("a1",8))
b = c(rep("b0",4),rep("b1",4),rep("b0",4),rep("b1",4))
c = c(rep(c("c0","c1","c0","c1"),4))
d = c(rep(c("d0","d0","d1","d1"),4))
dat = data.frame(yield=yield/2,a=a,b=b,c=c,d=d)
my_aov = summary(aov(yield~a*b*c*d,data = dat))
my_aov
my_aov[[1]]
my_aov[1]$F_value = my_aov[[1]]$`Mean Sq`/100
View(my_aov)
my_aov[[1]]$F_value = my_aov[[1]]$`Mean Sq`/100
View(my_aov)
my_aov[[1]]$F_value = my_aov[[1]]$`Mean Sq`/100
my_aov[[1]]$p_value = pf(my_aov[[1]]$F_value,1,15,lower.tail = FALSE)
my_aov
dat = data.frame(yield=yield,a=a,b=b,c=c,d=d)
my_aov = summary(aov(yield~a*b*c*d,data = dat))
my_aov[[1]]$F_value = my_aov[[1]]$`Mean Sq`/100
my_aov[[1]]$p_value = pf(my_aov[[1]]$F_value,1,15,lower.tail = FALSE)
my_aov
dat = data.frame(yield=yield/2,a=a,b=b,c=c,d=d)
my_aov = summary(aov(yield~a*b*c*d,data = dat))
my_aov[[1]]$F_value = my_aov[[1]]$`Mean Sq`/100
my_aov[[1]]$p_value = pf(my_aov[[1]]$F_value,1,15,lower.tail = FALSE)
my_aov
my_aov[[1]]$effects = my_lm$coefficients
my_lm = lm(yield~a*b*c*d,data = dat)
my_aov[[1]]$effects = my_lm$coefficients
my_aov[[1]]$effects = my_lm$coefficients[2:16]
my_aov
my_lm$coefficients
my_aov
my_aov2 = summary(aov(yield~a*b+a*c+a*d+b*c+b*d+c*d,data = dat))
my_aov2
my_aov[[1]]$F_value = my_aov[[1]]$`Mean Sq`/100/15
my_aov[[1]]$p_value = pf(my_aov[[1]]$F_value,1,15,lower.tail = FALSE)
my_aov[[1]]$effects = my_lm$coefficients[2:16]
my_aov
my_aov[[1]]$F_value = my_aov[[1]]$`Mean Sq`/(100/15)
my_aov[[1]]$p_value = pf(my_aov[[1]]$F_value,1,15,lower.tail = FALSE)
my_aov[[1]]$effects = my_lm$coefficients[2:16]
my_aov
my_aov[[1]]$F_value = my_aov[[1]]$`Mean Sq`/100
my_aov[[1]]$p_value = pf(my_aov[[1]]$F_value,1,15,lower.tail = FALSE)
my_aov[[1]]$effects = my_lm$coefficients[2:16]
my_aov
# a = c(rep("a0",8),rep("a1",8))
# b = c(rep("b0",4),rep("b1",4),rep("b0",4),rep("b1",4))
# c = c(rep(c("c0","c1","c0","c1"),4))
# d = c(rep(c("d0","d0","d1","d1"),4))
a = c(rep(-1,8),rep(1,8))
b = c(rep(-1,4),rep(1,4),rep(-1,4),rep(1,4))
c = c(rep(c(-1,1,-1,1),4))
d = c(rep(c(-1,-1,1,1),4))
dat = data.frame(yield=yield/2,a=a,b=b,c=c,d=d)
my_aov = summary(aov(yield~a*b*c*d,data = dat))
my_lm = lm(yield~a*b*c*d,data = dat)
my_aov[[1]]$F_value = my_aov[[1]]$`Mean Sq`/100
my_aov[[1]]$p_value = pf(my_aov[[1]]$F_value,1,15,lower.tail = FALSE)
my_aov[[1]]$effects = my_lm$coefficients[2:16]
my_aov
my_lm
summary(my_lm)
my_aov[[1]]$effects = 2*my_lm$coefficients[2:16]
my_aov
my_lm2 = lm(yield~a*b+a*c+a*d+b*c+b*d+c*d,data = dat)
my_lm2
(-4.78125++0.03125−0.84375+4.03125)*2
(-4.78125+0.03125−0.84375+4.03125)*2
(-4.78125+0.03125-0.84375+4.03125)*2
(−0.53125+0.03125+1.65625+6.28125)*2
(-0.53125+0.03125+1.65625+6.28125)*2
(-1.90625−0.84375+1.65625+0.65625)*2
(-1.90625-0.84375+1.65625+0.65625)*2
(6.84375+4.03125+6.28125+0.65625)*2
my_aov2
96.2*2
my_lm2$fitted.values
my_lm2$model
my_lm2$coefficients
my_lm2$residuals
my_lm2$model
my_lm2$fitted.values
6.78125-7.65625
my_lm2
D = c(rep(c(rep(-1,8),rep(1,8)),2))
data2 = c(1.4,1.2,3.6,1.2,1.5,1.4,1.5,1.6,5,9,12,5.4,4.2,4.4,9.3,2.8,
1.7,2,3.1,1.2,1.9,1.2,1,1.8,9.5,5.9,12.6,6.3,8,4.2,7.7,6)
A = c(rep(c(-1,1),16))
B = c(rep(c(-1,-1,1,1),8))
C = c(rep(c(-1,-1,-1,-1,1,1,1,1),4))
D = c(rep(c(rep(-1,8),rep(1,8)),2))
dat2 = data.frame(score=data2,A=A,B=B,C=C,D=D)
my_lm2 = lm(score~A*B*C*D,data = dat2)
qqnorm(data2)
qqnorm(data2);qqline(data2)
estimates = my_lm2$fitted.values
qqnorm(estimates);qqline(estimates)
estimates
my_lm2$model
qqnorm(data2);qqline(data2)
qqnorm(estimates,main = "Normal Q-Q Plot for estimates");qqline(estimates)
qqnorm(data2,main = "Normal Q-Q Plot for original data");qqline(data2)
??boxcox
library(MASS)
E = c(rep(-1,16),rep(1,16))
dat2 = data.frame(score=data2,A=A,B=B,C=C,D=D,E=E)
my_lm2 = lm(score~A*B*C*D*E,data = dat2)
estimates = my_lm2$fitted.values
qqnorm(data2,main = "Normal Q-Q Plot for original data");qqline(data2)
qqnorm(estimates,main = "Normal Q-Q Plot for estimates");qqline(estimates)
lm(score~A*B*C*D*E-A:B:C:D:E,data = dat2)
a = lm(score~A*B*C*D*E-A:B:C:D:E,data = dat2)
a$terms
a$coefficients
a$fitted.values
my_trans = boxcox(lm(score~A*B*C*D*E-A:B:C:D:E,data = dat2))
lambda = bc$x[which.max(bc$y)]
lambda = my_trans$x[which.max(my_trans$y)]
cat('The optimal parameter is ',bc$x[which.max(bc$y)],'.',sep = '')
cat('The optimal parameter lambda in box-cox transformation is ',lambda)
cat('The best parameter lambda in box-cox transformation is ',lambda)
my_aov[[1]]$effects = my_lm$fitted.values
my_aov[[1]]$effects = my_lm$fitted.values[1:16]
my_aov[[1]]$effects = my_lm$fitted.values[2:16]
my_aov
my_lm$fitted.values
my_lm$model
my_lm$fitted.values
score_new = (data2^lambda-1)/lambda
dat3 = data.frame(score=score_new,A=A,B=B,C=C,D=D,E=E)
my_aov3 = aov(score_new~A*B*C*D*E-A:B:C:D:E,data = dat3)
summary(my_aov3)
my_aov3$coefficients
my_aov3 = aov(score_new~A*B*C*D+A*B*D*E+A*C*D*E+A*B*C*E+B*C*D*E,data = dat3)
summary(my_aov3)
my_aov3 = aov(score_new~A*B*C*D*E,data = dat3)
summary(my_aov3)
my_aov3 = aov(score_new~A*B*C*D*E-A:B:C:D:E,data = dat3)
summary(my_aov3)
my_aov4 = aov(score_new~A*B*C*D*E-A:B:C:D:E-B:E-C:E-A:C:D-B:C:D-B:C:E-B:D:E-C:D:E-A:B:C:E-B:C:D:E,data = dat3)
summary(my_aov4)
A = rep(c(-1,1),16)
B = rep(c(-1,-1,1,1),8)
C = rep(c(-1,-1,-1,-1,1,1,1,1),4)
D = rep(c(rep(-1,8),rep(1,8)),2)
E = c(rep(-1,16),rep(1,16))
dat = data.frame(A=A,B=B,C=C,D=D,E=E,
BCD=B*C*D,ACE=A*C*E)
dat
(block1 = dat[which(dat$BCD==-1 & dat$ACE==-1)],)
(block1 = dat[which(dat$BCD==-1 & dat$ACE==-1),])
(block2 = dat[which(dat$BCD==-1 & dat$ACE==1),])
(block3 = dat[which(dat$BCD==1 & dat$ACE==-1),])
(block4 = dat[which(dat$BCD==1 & dat$ACE==1),])
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
Sys.which("make")
remove.packages("devtools")
install.packages("devtools")
install.packages("jsonlite", type = "source")
library(devtools)
install.packages("ellipsis")
library(devtools)
install_github("MichelNivard/GenomicSEM")
system('where make')
system('g++ -v')
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
Sys.which("make")
install.packages("jsonlite", type = "source")
remove.packages("devtools")
install.packages("devtools")
library(devtools)
install_github("MichelNivard/GenomicSEM")
remove.packages("rlang")
install_github("MichelNivard/GenomicSEM")
library(devtools)
install.packages("rlang")
library(devtools)
install_github("MichelNivard/GenomicSEM")
library(GenomicSEM)
load("C:/Users/zihan/Desktop/Amyloid_SEM/GNOVA/result/LDSCoutput.Rdata")
#run the common factoe model
CommonFactor_DWLS<- commonfactor(covstruc = LDSCoutput, estimation="DWLS")
View(CommonFactor_DWLS)
View(CommonFactor_DWLS[["modelfit"]])
View(CommonFactor_DWLS[["results"]])
View(CommonFactor_DWLS)
View(CommonFactor_DWLS[["modelfit"]])
View(CommonFactor_DWLS[["results"]])
load("C:/Users/zihan/Desktop/CommonFactor_DWLS.Rdata")
View(CommonFactor_DWLS)
View(CommonFactor_DWLS[["modelfit"]])
View(CommonFactor_DWLS[["results"]])
?read.delim
install_github("qlu-lab/PUMAS")
library(devtools)
install_github("qlu-lab/PUMAS")
4*3048+4/(1/2594+1/5560)
2*3048+4/(1/2594+1/5560)
(1/2594+1/5560)
2*1363+4/(1/1289+1/5560)
2*491+4/(1/835+1/5560)
2*798+4/(1/387+1/5560)
2*528+4/(1/918+1/5560)
2*4035+4/(1/3000+1/8536)
2*2033+4/(1/1695+1/8536)
2*1115+4/(1/387+1/5560)
2*987+4/(1/406+1/2976)
2*1363+4/(1/2045+1/11588)
2*798+4/(1/959+1/10145)
2*2182+4/(1/2594+1/5560)
2*989+4/(1/1289+1/5560)
2*353+4/(1/835+1/5560)
2*606+4/(1/387+1/5560)
2*357+4/(1/918+1/5560)
2*989+4/(1/2045+1/11588)
2*606+4/(1/959+1/10145)
#身高的体重
x=c(0.202614,0.273196,0.261364,0.243161,0.255814)
y=c(0.196078,0.185567,0.102273,0.103343,0.139535)
t.test(x,y,paired = TRUE)
#BMI
x=c(0.130719,0.154639,0.1875,0.158055,0.139535)
y=c(0.143791,0.149485,0.085227,0.085106,0.131783)
t.test(x,y,paired = TRUE)
#身高的体重
x=c(0.202614,0.273196,0.261364,0.243161,0.255814)
y=c(0.196078,0.185567,0.102273,0.103343,0.139535)
mu = mean(x)-mean(y)
r = sample(c(-1,1),5,replace = T)
my_mu = c()
mu = mean(x-y)
a = x-y
a*r
a
for (i in 1:10000) {
r = sample(c(-1,1),5,replace = T)
a = x-y
b = mean(a*r)
my_mu[i]=b
}
2*length(which(my_mu>mu))/10000
2*length(which(my_mu>=mu))/10000
mu = mean(x-y)
my_mu = c()
for (i in 1:10000) {
r = sample(c(-1,1),5,replace = T)
a = x-y
b = mean(a*r)
my_mu[i]=b
}
2*length(which(my_mu>=mu))/10000
mu = mean(x)-mean(y)
my_mu=c()
dat = sample(c(x,y),10)
mu = mean(x)-mean(y)
my_mu=c()
for (i in 1:10000) {
dat = sample(c(x,y),10)
my_mu[i]=mean(dat[1:5])-mean(dat[6:10])
}
2*length(which(my_mu>=mu))/10000
mu = mean(x)-mean(y)
my_mu=c()
for (i in 1:10000) {
dat = sample(c(x,y),10)
my_mu[i]=mean(dat[1:5])-mean(dat[6:10])
}
2*length(which(my_mu>mu))/10000
mu = mean(x-y)
my_mu = c()
for (i in 1:10000) {
r = sample(c(-1,1),5,replace = T)
a = x-y
b = mean(a*r)
my_mu[i]=b
}
2*length(which(my_mu>mu))/10000
#BMI
x=c(0.130719,0.154639,0.1875,0.158055,0.139535)
y=c(0.143791,0.149485,0.085227,0.085106,0.131783)
t.test(x,y,paired = TRUE)
mu = mean(x)-mean(y)
my_mu=c()
for (i in 1:10000) {
dat = sample(c(x,y),10)
my_mu[i]=mean(dat[1:5])-mean(dat[6:10])
}
2*length(which(my_mu>mu))/10000
mu = mean(x-y)
my_mu = c()
for (i in 1:10000) {
r = sample(c(-1,1),5,replace = T)
a = x-y
b = mean(a*r)
my_mu[i]=b
}
2*length(which(my_mu>mu))/10000
?wilcox.test
wilcox.test(x,y,paired = T)
#身高的体重
x=c(0.202614,0.273196,0.261364,0.243161,0.255814)
y=c(0.196078,0.185567,0.102273,0.103343,0.139535)
wilcox.test(x,y,paired = T)
#BMI
x=c(0.130719,0.154639,0.1875,0.158055,0.139535)
y=c(0.143791,0.149485,0.085227,0.085106,0.131783)
wilcox.test(x,y,paired = T)
wilcox.test(x,y,paired = T)
#身高的体重
x=c(0.202614,0.273196,0.261364,0.243161,0.255814)
y=c(0.196078,0.185567,0.102273,0.103343,0.139535)
wilcox.test(x,y,paired = T)
#BMI
x=c(0.130719,0.154639,0.1875,0.158055,0.139535)
y=c(0.143791,0.149485,0.085227,0.085106,0.131783)
wilcox.test(x,y,paired = T)
11000-4985
?is.na
#random select 6015 non-adopted individuals
a = 1:6015
b = sample(a,6015)
set.seed(123)
b = sample(a,6015)
set.seed(123)
b = sample(a,6015)
sum(is.na(b))
11000-4963
10+9+4+8+1+5+7+3+3+4+7+7+8+9+10+10
2+10+2+8+10+6+10+10+10+10+5+5+10+5+8+5+1+6
5/123
5+4+5+5+2+5+1+5+3+5+1
4/41
65085/986342
664/986342
115/986342
56/65085
608/921257
19/65085
96/921257
install.packages("dplyr")
install.packages("nycflights13")
library(dplyr)
library(nycflights13)
library(tidyverse)
dat = flights
View(dat)
filter(dat,arr.delay>=2)
filter(flights,arr.delay>=2)
filter(dat,arr_delay>=2)
filter(dat,arr_delay>=2,dep_delay==0)
filter(dat,is.na(dep_time))
arrange(dat,desc(distance/air_time))
flights %>% group_by(flight) %>% filter(arr_delay>1)
a=flights %>% group_by(flight) %>% filter(arr_delay>1)
View(a)
a=flights %>% group_by(flight) %>% filter(arr_delay>1)%>%
summarise(count=n(),
ave=mean(arr_delay,na.rm = TRUE))
View(a)
a=flights %>% group_by(flight) %>% filter(arr_delay>1)%>%summarise(count=n(),
ave=mean(arr_delay,na.rm = TRUE))
View(dat)
a=flights %>%
select(arr_delay,flight) %>%
group_by(flight) %>%
filter(arr_delay>60)%>%summarise(count=n(),
ave=mean(arr_delay,na.rm = TRUE))
install.packages('IRkernel')
IRkernel::installspec(user = FALSE)
install.packages("shiny")
library(shiny)
runExample("01_hello")
ui <- fluidPage(
titlePanel("Discussion 628")
)
server <- function(input, output) {}
shinyApp(ui = ui, server = server)
94*56/528
94*434*56*472/(528*528*527)
111*144/447
111*336*144*303/(447*447*446)
9.97+35.76
7.34+18.26
(96-45.73)^2/25.6
pchisq(98.71,1,lower.tail = FALSE)
log(30*408/(64*26))
1/(1/30+1/26+1/64+1/408)
log(66*258/(45*78))
1/(1/66+1/78+1/45+1/258)
(11.127*1.995+18.494*1.579)/(11.127+18.494)
exp(1.735)
exp(1.7356)
1-0.05/2
1.735-1.96*sqrt(1/(11.127+18.494))
1.735+1.96*sqrt(1/(11.127+18.494))
exp(1.375)
exp(2.095)
30*408/528
24*64/528
(30+408)/528
90/528
16*64/528
26*64/528
66*258/447
78*45/447
(66+258)/447
(78+45)/447
(23)
(23.18+38.09)/3.15+7.85
(23.18+38.09)/(3.15+7.85)
log(5.57)
r1=23.18
r2=38.09
s1=3.15
s2=7.85
u1=0.83
u2=0.72
v1=0.17
v2=0.28
1/2*((u1*r1+u2*r2)/(r1+r2)^2+(u1*s1+v1*r1+u2*s2+v2*r2)/((r1+r2)*(s1+s2))+(v1*s1+v2*s2)/(s1+s2)^2)
1.72-1.96*0.034
1.72-1.96*sqrt(0.034)
1.72+1.96*sqrt(0.034)
log(5.569)-1.96*sqrt(0.035)
exp(1.36)
exp(2.08)
96+104
109+666
96+109
104+666
200*205/975
205*770*200*775/(975*975*974)
(96-42.05)^2/26.42
pchisq(110.17,1,lower.tail = F)
dat = matrix(c(96,104,109,666),nrow = 2)
(fisher = fisher.test(dat))
41*52/(33*44)
log(1.468)
1/41+1/44+1/33+1/52
0.384-1.96*sqrt(0.097)
0.384+1.96*sqrt(0.097)
exp(-0.226)
exp(0.994)
170*(41*52-33*44)^2/(74*96*85*85)
pchisq(1.532,1,lower.tail = F)
(15-7)^2/22
pchisq(2.91,1,lower.tail = F)
15/7
15/22
b=15
c=7
b/(b+(c+1)*qf(0.025,2*c+2,2*b,lower.tail = F))
(b+1)*qf(0.025,2*b+2,2*c)/(c+(b+1)*qf(2*b+2,2*c))
(b+1)*qf(0.025,2*b+2,2*c)/(c+(b+1)*qf(0.025,2*b+2,2*c))
(b+1)*qf(0.025,2*b+2,2*c)
c/(c+(b+1)*qf(0.025,2*b+2,2*c))
(b+1)*qf(0.025,2*b+2,2*c,lower.tail = F)/(c+(b+1)*qf(0.025,2*b+2,2*c,lower.tail = F))
0.45/(1-0.45)
0.86/(1-0.86)
?write.table
install.packages("psych")
library(psych)
2*(1-pnorm(0.144163/0.064506))
setwd("D:/STAT605project/STAT605-group")
dat=read.csv("00000021_s004_t000.csv")
dat=readLines("00000021_s004_t000.csv")
dat[1]
age=dat[1]
dat=NULL
